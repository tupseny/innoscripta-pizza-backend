{"version":3,"sources":["redux/context.js","components/other/currency.js","components/other/alert.js","helpers/error-handler.js","services/api.js","services/menu-service.js","helpers/validators.js","components/cart/order-modal.js","services/user-service.js","services/auth-service.js","helpers/promise.js","services/cart-service.js","components/cart/cart-browser.js","redux/reduxer/cart-reducer.js","components/menu/menu-browser.js","components/menu/menu-page.js","helpers/config.js","redux/reduxer/currency-reducer.js","components/navigation/navbar.js","components/app-with-context.js","hooks/useForm.js","validators/register-validator.js","components/auth/register-form.js","validators/login-validator.js","components/auth/login-form.js","components/init-app.js","components/navigation/footer/footer.js","components/profile/order-history.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["CartContext","React","AlertContext","UserContext","CurrencyContext","CURRENCY","dollar","symbol","name","prefix","euro","suffix","rubble","EXCHANGE_RATES","rate","Currency","props","curCurrency","useContext","children","currency","isNaN","val","newCurrency","Object","keys","reduce","result","key","item","getDollarExchangeRate","Math","round","PizzaAlert","timeout","state","setState","style","right","left","bottom","useEffect","timer","setTimeout","success","error","clearTimeout","className","body","handleErrors","response","ok","console","statusText","ApiService","path","method","data","headers","promiseClass","url","this","_request","_headers","JSON","stringify","assign","options","promise","fetch","then","handle","undefined","_apiRequest","MenuService","getApiRequest","id","Validators","length","match","Order","show","onClose","totalPrice","useState","address","setAddress","phone","setPhone","validAddress","setValidAddress","validPhone","setValidPhone","onChangeAddress","e","persist","target","value","onChangePhone","Modal","onHide","Header","closeButton","Title","Body","Form","Container","fluid","Group","controlId","Label","Control","required","type","placeholder","onChange","Text","Footer","Button","variant","onClick","disabled","UserService","token","AuthService","postApiRequest","localStorage","setItem","getItem","removeItem","PizzaPromise","callback","errorCallback","bind","json","code","status","message","errors","CartService","items","getToken","getUserBytToken","user","api_token","log","makeAnonOrder","CartPage","isLoading","setIsLoading","showModal","setShowModal","cartContext","cartDispatch","setAlert","cart","accum","price","isSubscribed","useRef","current","onSubmitClickHandler","preventDefault","total","btnName","makeOrder","actions","clean","CartBrowser","onDeleteHandler","remove","onDelete","deliveryFee","onClickHandler","CartTable","CartTableItem","image","category","amount","scope","src","alt","width","Table","map","CartSummary","Row","Col","ListGroup","Item","block","Spinner","animation","cartInitializer","parse","updateAmount","cartReducer","action","newState","genNewState","addToCart","removeFromCart","Error","saveNewState","obj","stateCopy","filter","foundItemIndex","findIndex","splice","push","MenuBrowser","setItems","isLoaded","setIsLoaded","fetchMenu","title","MenuGroup","setIsloading","MEALS_KEY","fetchMeal","ProgressBar","animated","now","MenuGroupHeader","MenuGroupBody","xs","toLowerCase","MenuItem","setAmount","isInCart","setIsInCart","find","el","newAmount","updateContext","onAddClick","Card","Img","loading","min","Menu","CONFIG","logo","header","menu","home","login","signup","history","currencyInitializer","currencyActions","currencyReducer","NavbarPizza","setUser","currencyContext","currencyDispatch","config","brand","nav","href","signout","values","handleSignOut","logout","handleCurrencyChange","event","choose","forEach","Navbar","expand","Brand","height","Toggle","ariac-controls","Collapse","Nav","to","NavDropdown","onSelect","index","$","document","ready","homePath","window","scroll","location","pathname","scrollTop","removeClass","addClass","AppContext","alertContext","useReducer","userContext","Provider","useForm","validatorClass","setValues","setErrors","isSubmited","setIsSubmited","handleChange","handleSubmit","validate","RegisterValidator","password","rePassword","RegisterPage","setLoading","loginUrl","handleRegister","email","register","saveToken","RegisterFormBrowser","validated","setValidated","noValidate","onSubmit","currentTarget","checkValidity","autoComplete","FormGroup","FormControl","Feedback","LoginValidator","LoginPage","handleLogin","authenticate","LoginBrowser","InitApp","UpdateUser","PizzaFooter","OrderHistory","fetchOrders","err","borderless","OrderHistoryItem","OrderRow","responsive","size","Home","lg","xl","App","component","Login","Register","Cart","from","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6653370a.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\nexport const CartContext = React.createContext(null);\r\nexport const AlertContext = React.createContext(null);\r\nexport const UserContext = React.createContext(null);\r\nexport const CurrencyContext = React.createContext(null);\r\n","import React, {useContext} from \"react\";\r\nimport {CurrencyContext} from \"../../redux/context\";\r\n\r\nexport const CURRENCY = {\r\n    dollar: {symbol: '$', name: 'Dollar', prefix: true},\r\n    euro: {symbol: '€', name: 'Euro', suffix: true},\r\n    rubble: {symbol: \"₽\", name: \"Rubble\", suffix: true},\r\n};\r\n\r\nconst EXCHANGE_RATES = {\r\n    dollar: {\r\n        euro: {symbol: CURRENCY.euro.symbol, rate: 0.9071},\r\n        dollar: {symbol: CURRENCY.dollar.symbol, rate: 1},\r\n        rubble: {symbol: CURRENCY.rubble.symbol, rate: 78.4579}\r\n    }\r\n};\r\n\r\nexport const Currency = (props) => {\r\n    const curCurrency = useContext(CurrencyContext)[0];\r\n    const {children} = props;\r\n\r\n    const currency = curCurrency.currency;\r\n\r\n    if (isNaN(children)) {\r\n        return <div>NaN</div>\r\n    }\r\n\r\n    let val = children;\r\n\r\n    val *= getDollarExchangeRate(currency);\r\n    val = Math.round(val);\r\n\r\n    val = currency.prefix ? currency.symbol + val : val;\r\n    val += currency.suffix ? currency.symbol : '';\r\n\r\n    return <span>{val}</span>;\r\n};\r\n\r\nfunction getDollarExchangeRate(newCurrency) {\r\n    return  getCurrencyRate(newCurrency.symbol);\r\n\r\n    function getCurrencyRate(symbol) {\r\n        return Object.keys(EXCHANGE_RATES.dollar).reduce((result, key) => {\r\n            const item = EXCHANGE_RATES.dollar[key];\r\n            if (item.symbol === symbol) {\r\n                return item.rate;\r\n            }else{\r\n                return result > 0 ? result : item.rate;\r\n            }\r\n        }, 0);\r\n    }\r\n}\r\n","import React, {useContext, useEffect} from \"react\";\r\nimport {AlertContext} from \"../../redux/context\";\r\n\r\nexport const PizzaAlert = (props) => {\r\n    const {timeout} = props;\r\n    const [state, setState] = useContext(AlertContext);\r\n\r\n    const style = {right: '30%', left: '30%', bottom: '60%'};\r\n\r\n    function clearAlert() {\r\n        setState({success: '', error: ''});\r\n    }\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => clearAlert(), timeout);\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    });\r\n\r\n    let className = 'text-center fixed-bottom alert';\r\n    let body = null;\r\n    if (state.error) {\r\n        className += ' alert-danger';\r\n        body = (<div style={style} className={className}>{state.error}</div>)\r\n    } else if (state.success) {\r\n        className += ' alert-success';\r\n        body = (<div style={style} className={className}>{state.success}</div>)\r\n    }\r\n\r\n    return body;\r\n};\r\n","import {useContext} from \"react\";\r\nimport {AlertContext} from \"../redux/context\";\r\n\r\nexport const handleErrors = response => {\r\n    if (!response.ok){\r\n        console.error(response.statusText);\r\n    }\r\n\r\n    return response;\r\n};\r\n","import {handleErrors} from \"../helpers/error-handler\";\r\n\r\nconst API = '/api';\r\n\r\nexport class ApiService {\r\n    static _apiRequest(path, method, data, headers, promiseClass) {\r\n        const url = API + path;\r\n        this._request(url, method, data, headers, promiseClass)\r\n    }\r\n\r\n    static _request(path, method, data, headers, promiseClass) {\r\n        const _headers = {'Accept': 'application/json'};\r\n\r\n        data = data && (typeof data === 'string' ? data : JSON.stringify(data));\r\n\r\n        Object.assign(_headers, headers);\r\n\r\n        const options = {\r\n            method: method,\r\n            headers: _headers,\r\n            ...data && {body: data},\r\n        };\r\n\r\n        const promise = fetch(path, options)\r\n            .then(handleErrors);\r\n\r\n        if (promiseClass){\r\n            promise.then(promiseClass.handle);\r\n        }\r\n    }\r\n\r\n    static getRequest(path, data = null, promiseClass = undefined) {\r\n        this._request(path, 'GET', data, null, promiseClass)\r\n    }\r\n\r\n    static postRequest(path, data = null, promiseClass = undefined) {\r\n        const headers = {'Content-Type': 'application/json'};\r\n        this._request(path, 'POST', data, headers, promiseClass)\r\n    }\r\n\r\n    static getApiRequest(path, data = null, promiseClass = undefined) {\r\n        this._apiRequest(path, 'GET', data, null, promiseClass)\r\n    }\r\n\r\n    static postApiRequest(path, data = null, promiseClass = undefined) {\r\n        const headers = {'Content-Type': 'application/json'};\r\n\r\n        this._apiRequest(path, 'POST', data, headers, promiseClass)\r\n    }\r\n}\r\n","import {ApiService} from \"./api\";\r\n\r\nexport class MenuService extends ApiService{\r\n    static fetchMenu(promiseClass){\r\n        const path = '/menu';\r\n\r\n        this.getApiRequest(path, null, promiseClass);\r\n    }\r\n\r\n    static fetchMeal(id, promiseClass){\r\n        const path = '/menu/' + id;\r\n\r\n        this.getApiRequest(path, null, promiseClass);\r\n    }\r\n}\r\n","export class Validators {\r\n    static address(val) {\r\n        return val.length > 3;\r\n    }\r\n\r\n    static phone(val) {\r\n        const regExp = /^[\\s()+-]*?([0-9][\\s()+-]*){6,20}$/;\r\n        return !!val.match(regExp) || val.length !== 0;\r\n    }\r\n}\r\n","import {Button, ButtonGroup, Col, Container, Form, ListGroup, Modal, Row} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport {Currency, Dollar} from \"../other\";\r\nimport {FullscreenExit, X, XSquare, XSquareFill} from \"bootstrap-icons-react\";\r\nimport {Validators} from \"../../helpers/validators\";\r\n\r\nconst TITLE = 'Order details';\r\nconst ADDRESS_TITLE = 'Delivery address';\r\nconst ADDRESS_HINT = 'Enter your delivery address';\r\nconst PHONE_TITLE = 'Phone number';\r\nconst PHONE_HINT = 'Enter your phone number';\r\nconst PHONE_TEXT = 'We will contact you when the order is completed';\r\n\r\nexport const Order = props => {\r\n    const {show, onClose, totalPrice} = props;\r\n\r\n    const [address, setAddress] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [validAddress, setValidAddress] = useState(false);\r\n    const [validPhone, setValidPhone] = useState(false);\r\n\r\n    const onChangeAddress = e => {\r\n        e.persist();\r\n        const val = e.target.value;\r\n\r\n        if (Validators.address(val)){\r\n            setValidAddress(true);\r\n        }else{\r\n            setValidAddress(false);\r\n        }\r\n\r\n        setAddress(val);\r\n    };\r\n\r\n    const onChangePhone = e => {\r\n        e.persist();\r\n        const val = e.target.value;\r\n\r\n        if (Validators.phone(val)){\r\n            setValidPhone(true);\r\n        }else{\r\n            setValidPhone(false);\r\n        }\r\n\r\n        setPhone(val);\r\n    };\r\n\r\n    const renderBody = () => <Form>\r\n        <Container fluid>\r\n            <Form.Group controlId={'address'}>\r\n                <Form.Label>{ADDRESS_TITLE}</Form.Label>\r\n                <Form.Control required type={'text'} placeholder={ADDRESS_HINT} value={address}\r\n                              onChange={onChangeAddress}/>\r\n            </Form.Group>\r\n            <Form.Group controlId={'phone'}>\r\n                <Form.Label>{PHONE_TITLE}</Form.Label>\r\n                <Form.Control required type={'text'} placeholder={PHONE_HINT} value={phone} onChange={onChangePhone}/>\r\n                <Form.Text>{PHONE_TEXT}</Form.Text>\r\n            </Form.Group>\r\n            <div className={'d-flex justify-content-between py-3'}>\r\n                <strong className=\"text-muted\">Total</strong>\r\n                <h5 className={'font-weight-bold'}><Currency>{totalPrice}</Currency></h5>\r\n            </div>\r\n        </Container>\r\n    </Form>;\r\n\r\n\r\n    return <Modal show={show} onHide={onClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title className={'text-center text-uppercase'}>{TITLE}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {renderBody()}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={onClose} name={'order'} disabled={!(validAddress&&validPhone)} className={''}>Make an order</Button>\r\n            <Button variant=\"outline-secondary\" onClick={onClose} name={'cancel'} className={''}>Close</Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n};\r\n","import {ApiService} from \"./api\";\r\n\r\nexport class UserService {\r\n    static getUserBytToken(token, promiseClass) {\r\n        const path = '/user?api_token=' + token;\r\n\r\n        ApiService.getApiRequest(path, null, promiseClass)\r\n    }\r\n\r\n    static fetchOrders(token, promiseClass){\r\n        const path = '/user/orders?api_token=' + token;\r\n\r\n        ApiService.getApiRequest(path, null, promiseClass)\r\n    }\r\n}\r\n","import {ApiService} from \"./api\";\r\n\r\nexport class AuthService extends ApiService {\r\n    static register(data, promiseClass) {\r\n        const path = '/register';\r\n\r\n        this.postApiRequest(path, data, promiseClass);\r\n    }\r\n\r\n    static authenticate(data, promiseClass){\r\n        const path = '/login';\r\n\r\n        this.postApiRequest(path, data, promiseClass);\r\n    }\r\n\r\n    static saveToken(token) {\r\n        localStorage.setItem('token', token);\r\n    }\r\n\r\n    static getToken() {\r\n        return localStorage.getItem('token');\r\n    }\r\n\r\n    static logout(){\r\n        const path = '/logout';\r\n        localStorage.removeItem('token');\r\n        this.postApiRequest(path);\r\n    }\r\n}\r\n","export class PizzaPromise {\r\n    constructor(callback = () => {\r\n    }, errorCallback = () => {\r\n    }) {\r\n        this.errorCallback = errorCallback;\r\n        this.callback = callback;\r\n        this.handle = this.handle.bind(this);\r\n    }\r\n\r\n    handle(response) {\r\n        if (response.ok)\r\n            response.json().then(this.callback);\r\n        else {\r\n            const code = response.status;\r\n            let message = response.statusText;\r\n\r\n            response.json().then((data) => {\r\n                if (data?.errors) {\r\n                    message = data.errors;\r\n                }\r\n\r\n                this.errorCallback({code: code, message: message});\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n","import {ApiService} from \"./api\";\r\nimport {UserService} from \"./user-service\";\r\nimport {AuthService} from \"./auth-service\";\r\nimport {PizzaPromise} from \"../helpers/promise\";\r\n\r\nexport class CartService extends ApiService {\r\n    static makeOrder(items, promiseClass) {\r\n        function handleUserCallback(data) {\r\n            const user = data;\r\n            if (user?.api_token) {\r\n                console.log(user);\r\n                const path = '/user/orders';\r\n                const data = {\r\n                    api_token: user.api_token,\r\n                    items: items\r\n                };\r\n                ApiService.postApiRequest(path, data, promiseClass);\r\n            } else {\r\n                CartService.makeAnonOrder(items, promiseClass)\r\n            }\r\n        }\r\n\r\n        const token = AuthService.getToken();\r\n        if (token) {\r\n            UserService.getUserBytToken(AuthService.getToken(), new PizzaPromise(handleUserCallback));\r\n        } else {\r\n            CartService.makeAnonOrder(items, promiseClass);\r\n        }\r\n    }\r\n\r\n    static makeAnonOrder(items, promiseClass) {\r\n        const path = '/order/anon';\r\n        this.postApiRequest(path, items, promiseClass);\r\n    }\r\n}\r\n","import {Button, Col, Container, ListGroup, Row, Spinner, Table} from \"react-bootstrap\";\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport {Currency, Dollar} from \"../other\";\r\nimport {Trash} from \"bootstrap-icons-react\";\r\nimport {AlertContext, CartContext} from \"../../redux/context\";\r\nimport {actions} from \"../../redux/reduxer/cart-reducer\";\r\nimport {Order} from \"./order-modal\";\r\nimport {CartService} from \"../../services/cart-service\";\r\nimport {PizzaPromise} from \"../../helpers/promise\";\r\n\r\nconst FEE = 5;\r\nexport const CART_KEY = 'cart';\r\n\r\nexport const CartPage = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [cartContext, cartDispatch] = useContext(CartContext);\r\n    const setAlert = useContext(AlertContext)[1];\r\n\r\n    const totalPrice = cartContext.cart.reduce((accum, val) => accum + val.price, 0);\r\n\r\n    const isSubscribed = useRef();\r\n    useEffect(() => {\r\n        isSubscribed.current = true;\r\n\r\n        return () => {isSubscribed.current = false}\r\n    }, []);\r\n\r\n    const onSubmitClickHandler = e => {\r\n        e.preventDefault();\r\n\r\n        setIsLoading(true);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const onOrderCloseHandler = e => {\r\n        if (!isSubscribed.current) return;\r\n\r\n        let btnName;\r\n        if (e) {\r\n            e.persist();\r\n            btnName = e.target.name;\r\n        }\r\n\r\n        const callback = data => {\r\n            console.log(data);\r\n            cartDispatch({type: actions.clean});\r\n            setAlert({success: 'You order is cooking now...'});\r\n            setIsLoading(false);\r\n        };\r\n\r\n        if (btnName === 'order') {\r\n            CartService.makeOrder(cartContext.cart, new PizzaPromise(callback));\r\n        } else {\r\n            setIsLoading(false);\r\n        }\r\n\r\n        setShowModal(false);\r\n    };\r\n\r\n    return <div>\r\n        <CartBrowser\r\n            onSubmitClickHandler={onSubmitClickHandler}\r\n            isLoading={isLoading}\r\n            cartContext={cartContext}\r\n            cartDispatch={cartDispatch}\r\n            total={totalPrice}\r\n        />\r\n\r\n        <Order\r\n            show={showModal}\r\n            onClose={onOrderCloseHandler}\r\n            totalPrice={totalPrice + FEE}\r\n        />\r\n    </div>\r\n};\r\n\r\nconst CartBrowser = (props) => {\r\n    const {onSubmitClickHandler, isLoading, cartContext, cartDispatch, total} = props;\r\n\r\n    const onDeleteHandler = id => {\r\n        cartDispatch({\r\n            type: actions.remove,\r\n            item: {id: id}\r\n        });\r\n    };\r\n\r\n    const renderCartTable = () =>\r\n        <CartTable items={cartContext.cart} onDelete={onDeleteHandler}/>;\r\n\r\n    const renderCartSummary = () =>\r\n        <CartSummary\r\n            total={total}\r\n            deliveryFee={FEE}\r\n            onClickHandler={onSubmitClickHandler}\r\n            isLoading={isLoading}\r\n        />;\r\n\r\n    return <Container className={'my-3'}>\r\n        {\r\n            cartContext.cart.length > 0\r\n                ? <div>\r\n                    {renderCartTable()}\r\n                    {renderCartSummary()}\r\n                </div>\r\n                : <h1 className={'display-4 text-center'}>There are no items in cart</h1>\r\n        }\r\n    </Container>\r\n};\r\n\r\n/*\r\n* Render table with content\r\n*\r\n* PROPS:\r\n*   items - items that are added to cart\r\n*\r\n* */\r\nconst CartTable = (props) => {\r\n    const {items, onDelete} = props;\r\n\r\n    const renderHeader = () =>\r\n        <thead>\r\n        <tr>\r\n            <th scope=\"col\" className=\"border-0 bg-light\">\r\n                <div className=\"p-2 px-3 text-uppercase\">Product</div>\r\n            </th>\r\n            <th scope=\"col\" className=\"border-0 bg-light\">\r\n                <div className=\"py-2 text-uppercase\">Price</div>\r\n            </th>\r\n            <th scope=\"col\" className=\"border-0 bg-light\">\r\n                <div className=\"py-2 text-uppercase\">Quantity</div>\r\n            </th>\r\n            <th scope=\"col\" className=\"border-0 bg-light\">\r\n                <div className=\"py-2 text-uppercase\">Remove</div>\r\n            </th>\r\n        </tr>\r\n        </thead>;\r\n\r\n    /*\r\n* Render table item\r\n*\r\n* PROPS:\r\n*   image - image url\r\n*   name - name of item\r\n*   category - category name\r\n*   price - price of item\r\n*   amount - amount of item\r\n*   id - id of item\r\n*   onDeleteHandler - on delete item handler\r\n*\r\n* */\r\n    const CartTableItem = (props) => {\r\n        const {image, name, category, price, amount, id, onDeleteHandler} = props;\r\n\r\n        return <tbody>\r\n        <tr>\r\n            <th scope=\"row\" className=\"border-0\">\r\n                <div className=\"p-2\">\r\n                    <img src={image} alt=\"\" width=\"70\" className=\"img-fluid rounded shadow-sm\"/>\r\n                    <div className=\"ml-3 d-inline-block align-middle\">\r\n                        <h5 className=\"mb-0 text-dark d-inline-block align-middle\">\r\n                            {name}\r\n                        </h5>\r\n                        <span className=\"text-muted font-weight-normal font-italic d-block\">\r\n                        {category && 'Category: ' + category}\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n            </th>\r\n            <td className=\"border-0 align-middle\"><strong>\r\n                <Currency>{price}</Currency>\r\n            </strong></td>\r\n            <td className=\"border-0 align-middle\"><strong>\r\n                {amount}\r\n            </strong></td>\r\n            <td className=\"border-0 align-middle\">\r\n                <button onClick={() => onDeleteHandler(id)} className={'icon-btn'}>\r\n                    <Trash/>\r\n                </button>\r\n            </td>\r\n        </tr>\r\n        </tbody>\r\n    };\r\n\r\n    return <div className={'table-responsive'}>\r\n        <Table>\r\n            {renderHeader()}\r\n            {items.map(item =>\r\n                <CartTableItem\r\n                    image={item.image} name={item.name} category={item.category} price={item.price}\r\n                    amount={item.amount} key={item.id} id={item.id} onDeleteHandler={onDelete}/>\r\n            )}\r\n        </Table>\r\n    </div>\r\n};\r\n\r\n\r\n/*\r\n* Render summary\r\n*\r\n* PROPS:\r\n*   total - total menu price\r\n*   deliveryFee - fee for delievery\r\n*   onClickHandler - handler for submit button\r\n*   isLoading - loading state\r\n*\r\n* */\r\nconst CartSummary = (props) => {\r\n    const {total, deliveryFee, onClickHandler, isLoading} = props;\r\n\r\n    const renderBody = () =>\r\n        <ListGroup className={'mb-4'}>\r\n            <ListGroup.Item className=\"d-flex justify-content-between py-3 border-bottom\">\r\n                <strong className=\"text-muted\">Order Subtotal</strong>\r\n                <strong><Currency>{total}</Currency></strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"d-flex justify-content-between py-3 border-bottom\">\r\n                <strong className=\"text-muted\">Delivery cost</strong>\r\n                <strong><Currency>{deliveryFee}</Currency></strong>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item className=\"d-flex justify-content-between py-3 border-bottom\">\r\n                <strong className=\"text-muted\">Total</strong>\r\n                <h5 className={'font-weight-bold'}><Currency>{total + deliveryFee}</Currency></h5>\r\n            </ListGroup.Item>\r\n        </ListGroup>;\r\n\r\n    return <Row className=\"py-5 p-4 bg-white rounded shadow-sm\">\r\n        <Col id=\"order-summary\">\r\n            <div className=\"p-4\">\r\n                {renderBody()}\r\n                <Button onClick={onClickHandler} disabled={isLoading} block variant={\"danger\"}>\r\n                    {isLoading ? <Spinner animation={\"grow\"} variant={\"warning\"}/> : 'Procceed to checkout'}\r\n                </Button>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n};\r\n\r\n","import {CART_KEY} from \"../../components/cart/cart-browser\";\r\n\r\n\r\nexport const cartInitializer = () => {\r\n    let cart = JSON.parse(localStorage.getItem(CART_KEY));\r\n    if (!cart) {\r\n        cart = {cart: []}\r\n    }\r\n\r\n    return cart;\r\n\r\n    // return {cart: [\r\n    //         {name: 'Margarita', amount: 3, price: 72, category: 'Pizza', id: 1},\r\n    //         {name: 'Ferrita', amount: 1, price: 5, category: 'Pizza', id: 2},\r\n    //         {name: 'Coca-cola', amount: 1, price: 123, category: 'Drinks', id: 3}\r\n    //     ]};\r\n};\r\n\r\nexport const actions = {\r\n    updateAmount: 'UPDATE',\r\n    remove: 'REMOVE',\r\n    clean: 'CLEAN',\r\n};\r\n\r\nexport const cartReducer = (state, action) => {\r\n    const {cart} = state;\r\n\r\n    let newState = [];\r\n    switch (action.type) {\r\n        case actions.updateAmount:\r\n            newState = genNewState({cart: addToCart(action.item, cart)});\r\n            break;\r\n        case actions.remove:\r\n            const id = action.item.id;\r\n            newState = genNewState({cart: removeFromCart(id, cart)});\r\n            break;\r\n        case actions.clean:\r\n            newState = {cart: []};\r\n            break;\r\n        default:\r\n            throw new Error('Not allowed action')\r\n    }\r\n\r\n    saveNewState(newState);\r\n    return newState;\r\n\r\n    function saveNewState(state){\r\n        localStorage.setItem(CART_KEY, JSON.stringify(state))\r\n    }\r\n\r\n    function genNewState(obj) {\r\n        const stateCopy = Object.assign({}, state);\r\n        return Object.assign(stateCopy, obj);\r\n    }\r\n};\r\n\r\nfunction removeFromCart(id, cart) {\r\n    return cart.filter((item) => item.id !== id);\r\n}\r\n\r\nfunction addToCart(item, cart) {\r\n    const {id, amount} = item;\r\n\r\n    const foundItemIndex = cart.findIndex((item) => item.id === id);\r\n\r\n    if (foundItemIndex > -1) {\r\n        if (amount > 0){\r\n            cart[foundItemIndex].amount = amount;\r\n        }else{\r\n            cart.splice(foundItemIndex, 1);\r\n        }\r\n    } else {\r\n        cart.push(item)\r\n    }\r\n\r\n    return cart;\r\n}\r\n","import {Card, Col, ProgressBar, Row, Spinner} from \"react-bootstrap\";\r\nimport React, {useState, useEffect, useContext} from \"react\";\r\nimport {Dollar} from \"../other/\";\r\nimport {PlusSquare, PlusSquareFill} from \"bootstrap-icons-react\";\r\n\r\nimport './menu.scss';\r\nimport {MenuService} from \"../../services/menu-service\";\r\nimport {CartContext, CurrencyContext} from \"../../redux/context\";\r\nimport {actions} from \"../../redux/reduxer/cart-reducer\";\r\nimport {PizzaPromise} from \"../../helpers/promise\";\r\nimport {Currency} from \"../other/currency\";\r\n\r\nconst GROUPS_KEY = 'menu-groups';\r\nconst MEALS_KEY = 'group-items';\r\n\r\n\r\n/*\r\n*   Render all groups. Groups are requested from server\r\n*\r\n* */\r\nexport const MenuBrowser = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    //Get items from cache if exist\r\n    useEffect(() => {\r\n        const items = JSON.parse(localStorage.getItem(GROUPS_KEY));\r\n        if (Object.keys(items).length > 0) {\r\n            setItems(items);\r\n            setIsLoaded(true)\r\n        }\r\n    }, []);\r\n\r\n    //Fetch items from server\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n        const callback = (data) => {\r\n            if (!isSubscribed) return;\r\n\r\n            setItems(data);\r\n            setIsLoaded(true);\r\n            localStorage.setItem(GROUPS_KEY, JSON.stringify(data));\r\n        };\r\n\r\n        MenuService.fetchMenu(new PizzaPromise(callback));\r\n\r\n        return () => {isSubscribed = false};\r\n    }, []);\r\n\r\n    //Spinner\r\n    const renderLoading = () => <Spinner className={'m-auto mt-5'} animation={\"border\"} variant={\"warning\"}/>;\r\n\r\n    const renderGroups = () => {\r\n        return isLoaded ? (items ? items.map(item =>\r\n            <MenuGroup key={item.id} id={item.id} title={item.name}/>\r\n        ) : null) : renderLoading();\r\n    };\r\n\r\n    return renderGroups();\r\n};\r\n\r\n\r\n/*\r\n*   Render whole group with title and items. Meals are requested from server\r\n*\r\n*  PROPS:\r\n*   title - group name\r\n*   id - id of group got from server\r\n*\r\n* */\r\nconst MenuGroup = (props) => {\r\n    const {title, id} = props;\r\n    const [items, setItems] = useState([]);\r\n    const [isLoading, setIsloading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const items = JSON.parse(localStorage.getItem(MEALS_KEY + '_' + id));\r\n\r\n        if (items && Object.keys(items).length > 0) {\r\n            setItems(items);\r\n            setIsloading(false)\r\n        }\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        const callback = (data) => {\r\n            if (!isSubscribed) return;\r\n\r\n            setIsloading(false);\r\n            setItems(data);\r\n            localStorage.setItem(MEALS_KEY + '_' + id, JSON.stringify(data))\r\n        };\r\n\r\n        MenuService.fetchMeal(id, new PizzaPromise(callback));\r\n\r\n        return () => {isSubscribed = false}\r\n    }, [id]);\r\n\r\n    const renderLoading = () => <ProgressBar variant={\"warning\"} animated now={100}/>;\r\n\r\n    return <div className={'d-flex flex-column'}>\r\n        <Col>\r\n            <MenuGroupHeader name={title}/>\r\n        </Col>\r\n        <Col>\r\n            {isLoading ? renderLoading() : (items ? <MenuGroupBody category={title} items={items}/> : null)}\r\n        </Col>\r\n    </div>\r\n};\r\n\r\n\r\n/*\r\n*   Render header of group of MEALS\r\n*\r\n*  PROPS:\r\n*   name - group name\r\n*\r\n* */\r\nconst MenuGroupHeader = (props) => {\r\n    const {name} = props;\r\n\r\n    return <Row>\r\n        <Col className={'menu-category-container text-uppercase text-center text-danger'}>\r\n            <h1>{name}</h1>\r\n        </Col>\r\n    </Row>;\r\n};\r\n\r\n\r\n/*\r\n*   Render body of group of MEALS\r\n*\r\n*  PROPS:\r\n*   items - MEALs array\r\n*\r\n* */\r\nconst MenuGroupBody = (props) => {\r\n    const {items, category} = props;\r\n\r\n    return items ? <Row>\r\n        {items.map((item) =>\r\n            <Col xs={4} className={'menu-item-container'} key={item.id}>\r\n                <MenuItem image={category.toLowerCase() + '_' + item.name.toLowerCase() + '.png'} category={category} id={item.id} name={item.name} price={item.price}/>\r\n            </Col>\r\n        )}\r\n    </Row> : null;\r\n};\r\n\r\n\r\n/*\r\n*   Render one MEAL\r\n*\r\n*  PROPS:\r\n*   name - meal name\r\n*   image - url to image\r\n*   price - price (w/o currency)\r\n*   id - id of meal got from server\r\n*\r\n* */\r\nconst MenuItem = (props) => {\r\n    const {name, image, price, id, category} = props;\r\n    const imgWidth = '300px';\r\n\r\n    const [amount, setAmount] = useState(0);\r\n    const [isInCart, setIsInCart] = useState(false);\r\n\r\n    const [cartContext, cartDispatch] = useContext(CartContext);\r\n\r\n    useEffect(() => {\r\n        const cart = cartContext.cart;\r\n\r\n        if (cart) {\r\n            const item = cart.find(el => el.id === id);\r\n            if (item) {\r\n                const newAmount = item.amount;\r\n                setAmount(newAmount);\r\n                if (newAmount > 0) setIsInCart(true);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const updateContext = (newAmount) => {\r\n        cartDispatch({\r\n            type: actions.updateAmount,\r\n            item: {id: id, name: name, price: price, amount: newAmount, category: category}\r\n        });\r\n    };\r\n\r\n    const onAddClick = (e) => {\r\n        e.preventDefault();\r\n        const newState = !isInCart;\r\n        setIsInCart(newState);\r\n\r\n        const newAmount = newState ? 1 : 0;\r\n        setAmount(newAmount);\r\n        updateContext(newAmount);\r\n    };\r\n\r\n    const onAmountChanged = (e) => {\r\n        e.preventDefault();\r\n        const val = e.target.value;\r\n        const newAmount = val ? val : 0;\r\n\r\n        if (newAmount > 0) {\r\n            setIsInCart(true);\r\n        } else {\r\n            setIsInCart(false);\r\n        }\r\n\r\n        setAmount(newAmount);\r\n        updateContext(newAmount);\r\n    };\r\n\r\n    const renderAddBtn = () =>\r\n        <button className={'add-btn text-center text-danger icon-btn'} onClick={onAddClick}>\r\n            {isInCart ? <PlusSquareFill/> : <PlusSquare/>}\r\n        </button>;\r\n\r\n    return <Card className={'menu-item d-flex flex-column align-items-center'}>\r\n        <Card.Img loading={\"lazy\"} src={'static/img/' + image} width={imgWidth}/>\r\n        <Card.Body className={'w-100'}>\r\n\r\n            <Row className={'d-flex align-items-end'}>\r\n                <Col\r\n                    className={'text-uppercase text-left px-0'}>\r\n                    <h5>{name}</h5>\r\n                </Col>\r\n\r\n                <Row className={'d-flex align-items-baseline'}>\r\n                    <Col className={'text-center text-dark price-container'}>\r\n                        <Currency>{price}</Currency>\r\n                    </Col>\r\n\r\n                    <Col className={'text-right d-flex flex-row align-items-end'}>\r\n                        {renderAddBtn()}\r\n                        <input className={'meal-amount border-success text-center'} type={'number'} min={0}\r\n                               onChange={onAmountChanged} value={amount}/>\r\n                    </Col>\r\n                </Row>\r\n            </Row>\r\n        </Card.Body>\r\n    </Card>\r\n};\r\n","import React from \"react\";\r\nimport {MenuBrowser} from \"./menu-browser\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nexport const Menu = () =>\r\n        <Container id={\"menu-section\"}>\r\n            <MenuBrowser/>\r\n        </Container>;\r\n","export const CONFIG = {\r\n    title: 'Pizza',\r\n    urls: {\r\n        logo: 'static/img/pizza-logo.svg',\r\n        header: '',\r\n    },\r\n    paths: {\r\n        menu: '/menu',\r\n        home: '/home',\r\n        login: '/login',\r\n        signup: '/signup',\r\n        cart: '/cart',\r\n        history: '/history',\r\n    }\r\n};\r\n","import {CURRENCY} from \"../../components/other/currency\";\r\n\r\nexport const currencyInitializer = () => {\r\n    return {currency: CURRENCY.dollar};\r\n};\r\n\r\nexport const currencyActions = {\r\n    update: 'UPDATE'\r\n};\r\n\r\nexport const currencyReducer = (state, action) => {\r\n    let newState = {};\r\n    switch (action.type) {\r\n        case currencyActions.update:\r\n            newState = {currency: action.item};\r\n            break;\r\n        default:\r\n            throw new Error('Not allowed action')\r\n    }\r\n\r\n    return newState;\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport {Button, Container, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport \"./navbar.scss\";\r\nimport {CONFIG} from \"../../helpers/config\"\r\n\r\nimport $ from 'jquery';\r\nimport {AuthService} from \"../../services/auth-service\";\r\nimport {CurrencyContext, UserContext} from \"../../redux/context\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CURRENCY} from \"../other/currency\";\r\nimport {forEach} from \"react-bootstrap/cjs/ElementChildren\";\r\nimport {currencyActions} from \"../../redux/reduxer/currency-reducer\";\r\n\r\nexport const NavbarPizza = () => {\r\n    const [user, setUser] = useContext(UserContext);\r\n    const [currencyContext, currencyDispatch] = useContext(CurrencyContext);\r\n    const token = AuthService.getToken();\r\n\r\n    const config = {\r\n        brand: {\r\n            name: CONFIG.title,\r\n            logo: CONFIG.urls.logo,\r\n        },\r\n        nav: {\r\n            menu: {name: 'menu', href: CONFIG.paths.menu},\r\n            home: {name: 'home', href: CONFIG.paths.home},\r\n            cart: {name: 'cart', href: CONFIG.paths.cart},\r\n            login: {name: 'Log in', href: CONFIG.paths.login},\r\n            signup: {name: 'Sign up', href: CONFIG.paths.signup},\r\n            signout: {name: 'Sign Out'},\r\n            history: {name: 'History', href: CONFIG.paths.history},\r\n            currency: {name: 'Currency', values: [CURRENCY.euro, CURRENCY.dollar, CURRENCY.rubble]}\r\n        },\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        setUser({});\r\n        AuthService.logout();\r\n    };\r\n\r\n    const handleCurrencyChange = (key, event) => {\r\n        if (event) event.persist();\r\n        const choose = event.target.name;\r\n        Object.keys(CURRENCY).forEach(value => {\r\n            if (CURRENCY[value].symbol === choose) currencyDispatch({\r\n                type: currencyActions.update, item: CURRENCY[value]\r\n            });\r\n        })\r\n    };\r\n\r\n    const renderCollapsibleNavbar = () => {\r\n        const renderBrand = () =>\r\n            <Navbar.Brand href={config.nav.home.href}>\r\n                <img\r\n                    alt=''\r\n                    id=\"logo\"\r\n                    className=\"d-inline-block align-top\"\r\n                    src={config.brand.logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                />{' '}\r\n                {config.brand.name}\r\n            </Navbar.Brand>;\r\n\r\n        const renderLeftNav = () => {\r\n            return <Nav className={'mr-auto text-uppercase'}>\r\n                <NavLink className={'nav-link'} to={config.nav.home.href}>{config.nav.home.name}</NavLink>\r\n                <NavLink className={'nav-link'} to={config.nav.menu.href}> {config.nav.menu.name}</NavLink>\r\n            </Nav>;\r\n        };\r\n\r\n        const renderRightNav = () =>\r\n            <Nav>\r\n                <NavDropdown onSelect={handleCurrencyChange} title={currencyContext.currency.symbol} id={'currency-dropdown'}>\r\n                    {config.nav.currency.values.map((val, index) =>\r\n                        <NavDropdown.Item key={index}\r\n                                          name={val.symbol}>{val.symbol + ' - ' + val.name}</NavDropdown.Item>\r\n                    )}\r\n                </NavDropdown>\r\n                <NavLink className={'nav-link text-uppercase'}\r\n                         to={config.nav.cart.href}> {config.nav.cart.name}</NavLink>\r\n                {user.api_token || token\r\n                    ? <>\r\n                        <NavLink to={config.nav.history.href}\r\n                                 className={'nav-link text-uppercase mr-3'}>{config.nav.history.name}</NavLink>\r\n                        <Button className={'signout'}\r\n                                onClick={handleSignOut}>{config.nav.signout.name}</Button>\r\n                    </>\r\n\r\n                    : <>\r\n                        <NavLink to={config.nav.login.href}\r\n                                 className={'login nav-link'}>{config.nav.login.name}</NavLink>\r\n                        <NavLink to={config.nav.signup.href}\r\n                                 className={'signup nav-link'}>{config.nav.signup.name}</NavLink>\r\n                    </>\r\n                }\r\n            </Nav>;\r\n\r\n\r\n        return <Navbar expand={\"md\"} className={'navbar-main'}>\r\n            {renderBrand()}\r\n            <Navbar.Toggle ariac-controls={'navbar-nav'}/>\r\n            <Navbar.Collapse id={'navbar-nav'}>\r\n                {renderLeftNav()}\r\n                {renderRightNav()}\r\n            </Navbar.Collapse>\r\n        </Navbar>;\r\n    };\r\n\r\n    return renderCollapsibleNavbar();\r\n};\r\n\r\n$(document).ready(function () {\r\n    const homePath = CONFIG.paths.home;\r\n\r\n    $(window).scroll(function () {\r\n        const path = window.location.pathname;\r\n        const scroll = $(window).scrollTop();\r\n        if (path === homePath) {\r\n            if (scroll < 420) {\r\n                $('.navbar-tiny').removeClass('navbar-tiny');\r\n                $('.navbar-main').addClass('navbar-transporent');\r\n            } else {\r\n                $('.navbar-main').removeClass('navbar-transporent');\r\n                $('.navbar-main').addClass('navbar-tiny');\r\n            }\r\n        } else {\r\n            $('.navbar-main').removeClass('navbar-transporent');\r\n            $('.navbar-main').addClass('navbar-tiny');\r\n        }\r\n\r\n    });\r\n})\r\n;\r\n","import {AlertContext, CartContext, CurrencyContext, UserContext} from \"../redux/context\";\r\nimport React, {useReducer, useState} from \"react\";\r\nimport {cartInitializer, cartReducer} from \"../redux/reduxer/cart-reducer\";\r\nimport {CURRENCY} from \"./other/currency\";\r\nimport {currencyInitializer, currencyReducer} from \"../redux/reduxer/currency-reducer\";\r\n\r\nexport const AppContext = (props) => {\r\n    const alertContext = useState({success: '', error: ''});\r\n    const cartContext = useReducer(cartReducer, undefined, cartInitializer);\r\n    const userContext = useState({});\r\n    const currencyContext = useReducer(currencyReducer, undefined, currencyInitializer);\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        <AlertContext.Provider value={alertContext}>\r\n            <UserContext.Provider value={userContext}>\r\n                <CurrencyContext.Provider value={currencyContext}>\r\n                    {props.children}\r\n                </CurrencyContext.Provider>\r\n            </UserContext.Provider>\r\n        </AlertContext.Provider>\r\n    </CartContext.Provider>;\r\n};\r\n\r\n\r\n","import {useEffect, useState} from 'react';\r\n\r\nexport const useForm = (callback, validatorClass) =>{\r\n    const [values, setValues] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmited, setIsSubmited] = useState(false);\r\n\r\n    const handleSubmit = e => {\r\n        if (e) e.preventDefault();\r\n        setErrors(validatorClass.validate(values));\r\n        setIsSubmited(true);\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.persist();\r\n        setValues(values => ({ ...values, [e.target.name]: e.target.value }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmited){\r\n            callback(values);\r\n        }\r\n    }, [errors]);\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n};\r\n","\r\n\r\nexport default class RegisterValidator {\r\n    static validate(values) {\r\n        let errors = {};\r\n\r\n        if (values.password != values.rePassword) {\r\n            errors.rePassword = 'Passwords don\\'t match';\r\n        }\r\n\r\n        return errors;\r\n    }\r\n}\r\n","import {PersonPlus} from \"bootstrap-icons-react\";\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\r\n\r\nimport './register.scss';\r\nimport {Button, Form, FormControl, FormGroup, Spinner} from \"react-bootstrap\";\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport {RegisterValidator} from \"../../validators\";\r\nimport {AuthService} from \"../../services/auth-service\";\r\nimport {CONFIG} from \"../../helpers/config\";\r\nimport {AlertContext} from \"../../redux/context\";\r\nimport {PizzaPromise} from \"../../helpers/promise\";\r\n\r\nconst CREATE_ACCOUNT_TITLE = 'Create an account';\r\nconst SUBMIT_BUT = 'Sign Up';\r\nconst LOGIN = 'You already have an account? Login here.';\r\n\r\nexport const RegisterPage = () => {\r\n    const setAlert = useContext(AlertContext)[1];\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const isSubscribed = useRef();\r\n    useEffect(() => {\r\n        isSubscribed.current = true;\r\n\r\n        return () => {\r\n            isSubscribed.current = false\r\n        }\r\n    }, []);\r\n\r\n    const register = (values) => {\r\n        if (!isSubscribed.current) return;\r\n\r\n        setLoading(true);\r\n\r\n        const error = (error) => {\r\n            Object.keys(error.message).forEach((key) => {\r\n                setAlert({error: error.message[key][0]});\r\n            });\r\n\r\n            setLoading(false);\r\n        };\r\n\r\n        const callback = data => {\r\n            setLoading(false);\r\n\r\n            if (data.api_token) {\r\n                AuthService.saveToken(data.api_token);\r\n                setAlert({success: 'Successfully registered!'});\r\n            }\r\n        };\r\n\r\n\r\n        const data = {\r\n            'email': values.email,\r\n            'password': values.password,\r\n        };\r\n\r\n        AuthService.register(data, new PizzaPromise(callback, error));\r\n    };\r\n\r\n    return <RegisterFormBrowser loginUrl={CONFIG.paths.login} handleRegister={register} loading={loading}/>\r\n};\r\n\r\nconst RegisterFormBrowser = (props) => {\r\n    const {loginUrl, handleRegister, loading} = props;\r\n\r\n    const [validated, setValidated] = useState(false);\r\n    const {errors, values, handleChange, handleSubmit} = useForm(handleRegister, RegisterValidator);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n\r\n        if (form.checkValidity()) {\r\n            handleSubmit(e);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return <div className=\"register\">\r\n        <div className=\"form-container\">\r\n            <div className=\"illustration\"><PersonPlus/></div>\r\n\r\n            <Form noValidate validated={validated} method=\"post\" onSubmit={onSubmit}>\r\n                <input autoComplete=\"false\" name=\"hidden\" type=\"text\" style={{'display': 'none'}}/>\r\n                <h2 className=\"text-center\">{CREATE_ACCOUNT_TITLE}</h2>\r\n                <FormGroup controlId={'email'}>\r\n                    <Form.Control onChange={handleChange} required type=\"email\" name=\"email\" placeholder=\"Email\"/>\r\n                </FormGroup>\r\n                <FormGroup controlId={'password'}>\r\n                    <Form.Control onChange={handleChange} required type=\"password\" name=\"password\"\r\n                                  placeholder=\"Password\"/>\r\n                </FormGroup>\r\n                <FormGroup controlId={'password-repeat'}>\r\n                    <Form.Control onChange={handleChange} required type=\"password\" name=\"rePassword\"\r\n                                  placeholder=\"Password (repeat)\" value={values.rePassword || ''}\r\n                                  className={errors.rePassword ? 'is-invalid' : 'is-valid'}/>\r\n                    <FormControl.Feedback type={'invalid'} style={{'display': errors.rePassword ? 'block' : 'none'}}>Passwords\r\n                        don't match</FormControl.Feedback>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Button block type=\"submit\" disabled={loading}>{loading ?\r\n                        <Spinner animation={\"grow\"} variant={\"warning\"}/> : SUBMIT_BUT}</Button>\r\n                </FormGroup>\r\n                <a className=\"already\" href={loginUrl}>{LOGIN}</a>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n};\r\n","\r\n\r\nexport default class LoginValidator {\r\n    static validate(values) {\r\n        return {};\r\n    }\r\n}\r\n","import React, {useContext, useState} from \"react\";\r\nimport {Lock} from \"bootstrap-icons-react\";\r\n\r\nimport './login.scss';\r\nimport {Button, Form, FormGroup, Spinner} from \"react-bootstrap\";\r\nimport {useForm} from \"../../hooks/useForm\";\r\nimport LoginValidator from \"../../validators/login-validator\";\r\nimport {AuthService} from \"../../services/auth-service\";\r\nimport {AlertContext, UserContext} from \"../../redux/context\";\r\nimport {PizzaPromise} from \"../../helpers/promise\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst LOGIN = 'Log in';\r\n\r\nexport const LoginPage = () => {\r\n    const setAlert = useContext(AlertContext)[1];\r\n    const [user, setUser] = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    if (user.api_token)\r\n        return <Redirect to={'home'}/>;\r\n\r\n    const login = (values) => {\r\n        const data = {\r\n            email: values.email,\r\n            password: values.password,\r\n        };\r\n\r\n        setLoading(true);\r\n\r\n        const callback = (data) => {\r\n            const user = data.user;\r\n            setLoading(false);\r\n            console.log(user);\r\n            if (user?.api_token) {\r\n                AuthService.saveToken(user.api_token);\r\n                setUser(user);\r\n                setAlert({'success': 'Successfully logged in'});\r\n            } else {\r\n                setAlert({'error': 'Bad credentials'});\r\n            }\r\n        };\r\n\r\n        const error = () => {\r\n            setAlert({error: 'Unknown error'});\r\n\r\n            setLoading(false);\r\n        };\r\n\r\n        AuthService.authenticate(data, new PizzaPromise(callback, error));\r\n    };\r\n\r\n    return <LoginBrowser handleLogin={login} loading={loading}/>;\r\n};\r\n\r\nconst LoginBrowser = (props) => {\r\n    const {handleLogin, loading} = props;\r\n    const {values, handleChange, handleSubmit} = useForm(handleLogin, LoginValidator);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n\r\n        if (form.checkValidity()) {\r\n            handleSubmit(e);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return <div className=\"login-form-container\">\r\n        <Form noValidate validated={validated} method=\"post\" onSubmit={onSubmit}>\r\n            <div className=\"illustration\"><Lock/></div>\r\n            <FormGroup>\r\n                <Form.Control required onChange={handleChange} value={values.email || ''} type=\"email\" name=\"email\"\r\n                              placeholder=\"Email\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Form.Control required onChange={handleChange} value={values.password || ''} type=\"password\"\r\n                              name=\"password\" placeholder=\"Password\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Button block disabled={loading} type=\"submit\">{loading ?\r\n                    <Spinner animation={\"grow\"} variant={'warning'}/> : LOGIN}</Button>\r\n            </FormGroup>\r\n        </Form>\r\n    </div>\r\n};\r\n","import React, {useContext} from \"react\";\r\nimport {UserContext} from \"../redux/context\";\r\nimport {AuthService} from \"../services/auth-service\";\r\nimport {UserService} from \"../services/user-service\";\r\nimport {PizzaPromise} from \"../helpers/promise\";\r\n\r\nexport const InitApp = () => {\r\n    return <UpdateUser/>\r\n};\r\n\r\nconst UpdateUser = () => {\r\n    const [user, setUser] = useContext(UserContext);\r\n\r\n    if (AuthService.getToken() !== null && Object.keys(user).length === 0) {\r\n        const callback = (data) => {\r\n            if (data?.api_token) {\r\n                setUser(data);\r\n            } else {\r\n                AuthService.logout();\r\n            }\r\n        };\r\n\r\n        UserService.getUserBytToken(AuthService.getToken(), new PizzaPromise(callback));\r\n    }\r\n\r\n    return null;\r\n};\r\n","import React from 'react';\r\n\r\nimport './footer.scss'\r\n\r\nexport const PizzaFooter = () => {\r\n    return <div className=\"footer-basic\">\r\n        <footer>\r\n            <p className=\"copyright\">PIZZA © 2020</p>\r\n        </footer>\r\n    </div>\r\n};\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Col, Container, Row, Spinner, Table} from \"react-bootstrap\";\r\nimport {Currency, Dollar} from \"../other\";\r\nimport {UserService} from \"../../services/user-service\";\r\nimport {AlertContext, UserContext} from \"../../redux/context\";\r\nimport {PizzaPromise} from \"../../helpers/promise\";\r\nimport {AuthService} from \"../../services/auth-service\";\r\nimport {Redirect} from \"react-router\";\r\nimport {CONFIG} from \"../../helpers/config\";\r\n\r\nexport const OrderHistory = () => {\r\n    const [items, setItems] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [user, setUser] = useContext(UserContext);\r\n    const setAlert = useContext(AlertContext)[1];\r\n\r\n    const renderItems = () => {\r\n        return items\r\n            ? items.map((item, index) =>\r\n                <OrderHistoryItem key={index} id={index + 1} items={item}/>)\r\n            : <h1 className={'display-1'}>You don\\'t have any orders</h1>\r\n    };\r\n\r\n    useEffect(() => {\r\n        let isSubscribed = true;\r\n\r\n        const callback = (data) => {\r\n            if (!isSubscribed) return;\r\n\r\n            setItems(data);\r\n            setIsLoading(false);\r\n            console.log(data);\r\n        };\r\n\r\n        const error = (err) => {\r\n            if (!isSubscribed) return;\r\n            if (err.code === 401) {\r\n                setUser({});\r\n                AuthService.logout();\r\n                setAlert({error: 'Don\\' have permissions'});\r\n                setItems([]);\r\n            }\r\n            setIsLoading(false);\r\n        };\r\n\r\n        if (user.api_token)\r\n            UserService.fetchOrders(user.api_token, new PizzaPromise(callback, error));\r\n        else setItems([]);\r\n\r\n        return () => {\r\n            isSubscribed = false\r\n        }\r\n\r\n    }, [user]);\r\n\r\n    return Object.keys(user).length > 0 ? (\r\n            <Container className={'mx-5 my-3'}>\r\n                {isLoading\r\n                    ? <Spinner className={'d-flex justify-content-center'} animation={'border'}\r\n                               variant={'warning'}/>\r\n                    : <Table borderless>\r\n                        <tbody>\r\n                        {renderItems()}\r\n                        </tbody>\r\n                    </Table>}\r\n            </Container>)\r\n        : <Redirect to={CONFIG.paths.login}/>;\r\n\r\n};\r\n\r\nconst OrderHistoryItem = (props) => {\r\n    const {id, items} = props;\r\n\r\n    const OrderRow = (props) => {\r\n        const {name, price, amount} = props;\r\n\r\n        return <tr>\r\n            <td>\r\n                <h4>{name}</h4>\r\n            </td>\r\n            <td className=\"text-center\"><Currency>{price}</Currency></td>\r\n            <td className=\"text-center\">{amount}</td>\r\n        </tr>\r\n    };\r\n\r\n    return <tr>\r\n        <th>\r\n            <h1>{id}#</h1>\r\n        </th>\r\n\r\n        <td>\r\n            <Table responsive size={'sm'}>\r\n                <tbody>\r\n                {items.map((item) => <OrderRow name={item.name} price={item.price} amount={item.amount}/>)}\r\n                </tbody>\r\n            </Table>\r\n        </td>\r\n    </tr>;\r\n};\r\n\r\n","import React from \"react\";\r\n\r\nimport './home.scss'\r\nimport {Button, Col, Row} from \"react-bootstrap\";\r\nimport {Menu} from \"./menu\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {CONFIG} from \"../helpers/config\";\r\n\r\nexport const Home = (props) => {\r\n    return <>\r\n        <Header image={'header-background.jpeg'}/>\r\n        <Menu/>\r\n    </>\r\n};\r\n\r\nconst Header = (props) => {\r\n    const {image} = props;\r\n\r\n    return <div className={'header-container'}>\r\n        <div className=\"header-blue\"\r\n             style={{\r\n                 'backgroundImage': 'url(static/img/' + image + ')',\r\n                 'backgroundSize': 'cover',\r\n                 'backgroundRepeat': 'no-repeat',\r\n                 'backgroundPosition': 'left'\r\n             }}\r\n        >\r\n            <div className=\"container hero\">\r\n                <Row>\r\n                    <Col className=\"text-center\">\r\n                        <h1 className=\"display-2 text-uppercase text-center pulse animated\">\r\n                            Welcome to PizzaStore</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-md-center bounce animated hero-btn-group\">\r\n                    <Col xs={12} lg={6} xl={5} className=\"text-center\">\r\n                        <a href={'#menu-section'}\r\n                              className={\"btn btn-warning btn-block text-uppercase text-center text-dark border rounded border-primary bounce animated infinite\"}>\r\n                            show me pizza\r\n                        </a>\r\n                    </Col>\r\n\r\n                    <Col xs={12} lg={6} xl={5} className=\"text-center\">\r\n                        <Link to={CONFIG.paths.login} className=\"btn btn-outline-warning btn-block text-uppercase text-center\">\r\n                            log in\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n};\r\n","import React from 'react';\nimport 'bootswatch/dist/journal/bootstrap.min.css'\nimport './App.scss';\nimport {Menu} from \"./components/menu\";\nimport {Cart} from \"./components/cart\"\nimport {NavbarPizza} from \"./components/navigation\";\nimport {PizzaAlert} from \"./components/other/alert\";\nimport {AppContext} from \"./components/app-with-context\";\nimport {Register, Login} from \"./components/auth/\";\nimport {InitApp} from \"./components/init-app\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Redirect, Route} from \"react-router\";\nimport {CONFIG} from \"./helpers/config\";\nimport {PizzaFooter} from \"./components/navigation/footer/footer\";\nimport {OrderHistory} from \"./components/profile/order-history\";\nimport {Home} from \"./components/home\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <AppContext>\n                <InitApp/>\n                <NavbarPizza/>\n                <Route path={CONFIG.paths.home} component={Home}/>\n                <Route path={CONFIG.paths.menu} component={Menu}/>\n                <Route path={CONFIG.paths.login} component={Login}/>\n                <Route path={CONFIG.paths.signup} component={Register}/>\n                <Route path={CONFIG.paths.cart} component={Cart}/>\n                <Route path={CONFIG.paths.history} component={OrderHistory}/>\n                <Redirect to={'/home'} from={'/'}/>\n                <PizzaAlert timeout={3000}/>\n                <PizzaFooter/>\n            </AppContext>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App/>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}